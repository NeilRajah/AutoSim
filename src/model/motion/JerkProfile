if (t < tA / 2) { //increasing acceleration
	a += jA * dt; //jt
	v += a * dt + 0.5 * jA * dt2; //at + 0.5jt^2
	p += v * dt + 0.5 * a * dt2 + 0.167 * jA * dt3;
	
} else if (t >= tA / 2 && t < tA) { //decreasing acceleration
	a += jA * (t - tA);
	v = a * (p - a) - 0.5 * jA * dt2 + vM;
	p += v * dt + 0.5 * a * dt2 + 0.167 * jA * dt3;
	
} else if (t >= tA && t < (tT - tD)) { //cruising
	a = 0;
	v = vM;
	p += v;
	
} else if (t >= (tT - tD) && t < (tT - tD / 2)) { //increasing deceleration
	a += jD * dt;
	v += a * dt + 0.5 * jD * dt2; //at + 0.5jt^2
	p += v * dt + 0.5 * a * dt2 + 0.167 * jD * dt3;
	
} else { //decreasing deceleration
	a = jD * ()
	
} //if