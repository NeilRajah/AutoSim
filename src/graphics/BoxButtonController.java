/**
 * BoxButtonController
 * Author: Neil Balaskandarajah
 * Created on: 21/03/2020
 * Versatile controller for a button component
 */

package graphics;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util;

public class BoxButtonController implements MouseListener {
	//Attributes
	private BoxButton button; //button to control
	private Color light; //light color
	private Color dark; //dark color
	
	/*
	 * Takes a consumer
	 * runs the method when clicked 
	 * 	ie. runAnimation(), set point active, etc.
	 * 
	 * Can use button text as key for making path
	 */
	
	/**
	 * Create a controller for the button
	 * @param button Button to control
	 * @param light Light color for when the button isn't entered
	 * @param dark Dark color for when the button is entered
	 */
	public BoxButtonController(BoxButton button, Color light, Color dark) {
		//set attributes
		this.button = button;
		this.light = light;
		this.dark = dark;
	} //end constructor

	/**
	 * Change the color to dark when the mouse enters
	 * @param m MouseEvent generated by interface
	 */
	public void mouseEntered(MouseEvent m) {
		if (!button.isLocked()) {
			button.setBackgroundColor(dark);
		} //if
	} //end mouseEntered

	/**
	 * Change the color to light when the mouse leaves
	 * @param m MouseEvent generated by interface
	 */
	public void mouseExited(MouseEvent m) {
		if (!button.isLocked()) {
			button.setBackgroundColor(light);
		} //if
	} //end mouseExited

	/**
	 * Change the color to a darker dark when the mouse ispressed
	 * @param m MouseEvent generated by interface
	 */
	public void mousePressed(MouseEvent m) {
		if (!button.isLocked()) {
			button.setBackgroundColor(dark.darker());
		} //if
	} //end mousePressed

	/**
	 * Change the color back to light when the mouse is releaed
	 * @param m MouseEvent generated by interface
	 */
	public void mouseReleased(MouseEvent m) {
		if (!button.isLocked()) {
			button.setBackgroundColor(dark);
		} //if
	} //end mouseReleased
	
	/*
	 * Unimplemented
	 */
	public void mouseClicked(MouseEvent m) {}
} //end class
